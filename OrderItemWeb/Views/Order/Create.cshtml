@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<div class="text-center" style="background-color: gray;">
    <h3 class="mt-2">Sales Order Information <i class="fas fa-level-down-alt"></i></h3>
</div>

<div class="mt-1">
    <form id="frmOrder">
        <div class="row m-5">
            <div class="col-5">
                <div class="input-group mb-3">
                    <label class="input-group-text col-3 text-light">Sales Order Number</label>
                    <input id="keyword" type="text" class="form-control col-9" name="OrderNo" required />
                </div>
                <p id="orderNoErr" style="color: red"></p>
            </div>
            <div class="col-2">
            </div>
            <div class="col-5">
                <div class="input-group mb-3">
                    <label class="input-group-text col-3 text-light">Customer</label>
                    <select class="form-select" name="ComCustomerId" required>
                        @if (ViewBag.Customers != null && ViewBag.Customers.Count > 0)
                        {
                            foreach (VMComCustomer customer in ViewBag.Customers)
                            {
                                if (customer.ComCustomerId == ViewBag.CustomerId)
                                {
                                    <option value="@customer.ComCustomerId" selected>@customer.CustomerName</option>
                                }
                                else
                                {
                                    <option value="@customer.ComCustomerId">@customer.CustomerName</option>
                                }
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="row m-5">
            <div class="col-5 flatpickr">
                <div class="input-group mb-3">
                    <label class="input-group-text col-3 text-light">Order Date</label>
                    <input id="orderDate" type="text" class="form-control col-9" name="OrderDate" required />
                    <div class="input-group-append">
                        <button id="btnClearDate" class="btn btn-secondary">Clear</button>
                    </div>
                </div>
                <p id="orderDateErr" style="color: red"></p>
            </div>
            <div class="col-2">
            </div>
            <div class="col-5">
                <div class="input-group mb-3">
                    <label class="input-group-text col-3 text-light">Address</label>
                    <textarea class="form-control" id="address" rows="3" name="Address"></textarea>
                </div>
                <p id="orderAddressErr" style="color: red"></p>
            </div>
        </div>
        <input id="itemCarry" type="hidden" name="Items" />
    </form>
</div>

<div class="align-middle text-center" style="background-color: gray;">
    <h3 class="mt-2">Detail Item Information <i class="fas fa-level-down-alt"></i></h3>
</div>

<div class="row mt-4">
    <div class="col-3">
        <button id="btnAddItem" type="button" class="btn btn-light-primary mb-4 text-light"><span>Add New Data</span></button>
    </div>
</div>

<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th class="col-2">No</th>
                <th class="col-2">Action</th>
                <th class="col-2">Item Name</th>
                <th class="col-2">Qty</th>
                <th class="col-2">Price</th>
                <th class="col-2">Total</th>
            </tr>
        </thead>
        <tbody id="itemData">
            <tr>
                <td colspan="3"></td>
                <td id="totalItem">Total Item: 0</td>
                <td></td>
                <td id="totalAmount">Total Amount: 0</td>
            </tr>           
        </tbody>
    </table>
</div>

<div class="text-center">
    <div class="btn-group" role="group">
        <button id="btnAddOrder" class="btn btn-success" title="Edit...">
            Save
        </button>
        <button id="btnCancelOrder" class="btn btn-secondary" title="Delete...">
            Close
        </button>
    </div>
</div>

<script>
    $(document).ready(() => {
        var totalOrderItem = 0;
        var totalOrderAmount = 0;

        $("#orderDate").flatpickr({
            dateFormat: "Y-m-d"
        });

        $("#btnClearDate").click(function(e) {
            $("#orderDate").val("");
        })

        $("#btnAddItem").click(function(e) {
            if ($("#itemData tr").length == 1) {
                $("#itemData tr:last").before(`<tr><td id="newItemMarker" colspan="6" style="background-color: green;">New Item</td></tr>`)
            }

            $("#itemData tr:last").before(`<tr class="editable">` + "<td></td>" + "<td>" + `<div class="btn-group" role="group">
                            <button class="btn btn-info" title="Edit...">
                                <i class="far fa-save"></i>
                            </button>
                            &nbsp;
                            <button id="btnCancelItem" class="btn btn-danger" title="Delete...">
                                <i class="far fa-times-circle"></i>
                            </button>
                        </div>` +"</td>" +
            `<td class="name" contenteditable></td>` + '<td class="qty" contenteditable></td>' +
            `<td class="price" contenteditable></td>` + `<td class="total"></td>` + "</tr>")
        });

        $(document).on('click', '.btn-outline-info', function(e) {
            $(this).siblings().hide();
            $(this).hide();

            $(this).parent().append(
                            `<button class="btn btn-info" title="Edit...">
                                <i class="far fa-save"></i>
                            </button>`);

            var td = $(this).parent().parent();

            td.siblings(".name").prop("contenteditable", true);
            td.siblings(".qty").prop("contenteditable", true);
            td.siblings(".price").prop("contenteditable", true);
            td.siblings(".total").prop("contenteditable", true);

            totalOrderItem -= parseInt(td.siblings(".qty").text());
            totalOrderAmount -= parseFloat(td.siblings(".price").text())
        });

        $(document).on('click', '.btn-info', function(e) {
            var td = $(this).parent().parent();
            
            if (td.siblings(".name").text() == null || td.siblings(".name").text() == "") {
                toastAlert("Item Name must be filled!", "info", 5000);
                return;
            }

            var price = parseFloat(td.siblings(".price").text());
            var qty = parseInt(td.siblings(".qty").text());

            if (isNaN(price) || isNaN(qty)) {
                toastAlert("Quantity and price field must be a valid number!", "info", 5000);
                return;
            }

            td.siblings().removeAttr("contenteditable");

            td.siblings(".price").text(price.toLocaleString('id-ID', {
                                minimumFractionDigits: 0,
                                maximumFractionDigits: 0
                            }));

            var total = price * qty
            td.siblings(".total").text(total.toLocaleString('id-ID', {
                                minimumFractionDigits: 0,
                                maximumFractionDigits: 0
                            }));

            td.children().empty();
            td.children().append(`<button class="btn btn-outline-info" title="Edit...">
                                <i class="fas fa-edit"></i>
                            </button>
                            &nbsp;
                            <button class="btn btn-outline-danger" title="Delete...">
                                <i class="fas fa-trash-alt"></i>
                            </button>`);

            

            // var totalItemTxt = $("#totalItem").text();

            // console.log(totalItemTxt.substring(12));

            // var totalItem = qty + parseInt(totalItemTxt.substring(12));

            totalOrderItem += qty;
            console.log("qty: " + qty);
            
            $("#totalItem").text(`Total Item: ${totalOrderItem}`);

            // var totalAmountTxt = $("#totalAmount").text();

            totalOrderAmount += total;
            console.log("total: " + total);

            console.log(`Total Item: ${totalOrderItem}`);
            console.log(`Total Amount: ${totalOrderAmount}`);

            var amountCurr = totalOrderAmount.toLocaleString('id-ID', {
                                minimumFractionDigits: 0,
                                maximumFractionDigits: 0
                            });

            // var totalAmount = total + parseInt(totalAmountTxt.substring(14));
            $("#totalAmount").text(`Total Amount: ${amountCurr}`);
        });

        $(document).on('click', '.btn-danger', function(e) {
            $(this).parent().parent().parent().remove();
        });

        $(document).on('click', '.btn-outline-danger', function(e) {
            $(this).parent().parent().parent().remove();

            var td = $(this).parent().parent();

            var price = parseFloat(td.siblings(".price").text().replace(/\./g, ""));
            var qty = parseInt(td.siblings(".qty").text());

            totalOrderItem -= qty;
            console.log("qty: " + qty);

            $("#totalItem").text(`Total Item: ${totalOrderItem}`);

            var total = price * qty

            totalOrderAmount -= total;
            console.log("total: " + total);

            console.log(`Total Item: ${totalOrderItem}`);
            console.log(`Total Amount: ${totalOrderAmount}`);

            var amountCurr = totalOrderAmount.toLocaleString('id-ID', {
                                minimumFractionDigits: 0,
                                maximumFractionDigits: 0
                            });

            $("#totalAmount").text(`Total Amount: ${amountCurr}`);
        });

        $("#frmOrder").submit(function(e) {
            e.preventDefault();
        })

        $("#frmOrder").validate({
            rules: {
                OrderNo: {
                    required: true
                },
                OrderDate: {
                    required: true
                },               
                ComCustomerId: {
                    required: true
                },               
                Address: {
                    required: true
                }
            },
            messages: {
                OrderNo: {
                    required: "Order Number Is Required"
                },
                OrderDate: {
                    required: "Order Date Is Required"
                },
                Address: {
                    required: "Address Is Required"
                }
            },
            errorPlacement: function (error, element) {
                var message = error.text();

                if (message == "Order Number Is Required")
                {
                    error.appendTo("#orderNoErr");
                }
                else if (message == "Order Date Is Required")
                {
                    error.appendTo("#orderDateErr");
                }
                else if (message == "Address Is Required")
                {
                    error.appendTo("#orderAddressErr");
                }
            }
        });

        $("#btnAddOrder").click(function(e) {
            if ($("#frmOrder").valid()) {             
                var items = [];

                $("#itemData tr").slice(0, -1).each(function() {
                    let item = {
                        ItemName: $(this).find('.name').text().trim(),
                        Quantity: $(this).find('.qty').text(),
                        Price: $(this).find('.price').text()
                    }
                    items.push(item);
                });

                $("#itemCarry").val(JSON.stringify(items));

                console.log($("#itemCarry").val());

                // var date = $("#orderDate").val() ;
                // $("#orderDate").val(date + "")

                var order = $("#frmOrder").serializeArray();
                var orderObject = {};

                $.each(order, function(i, field) {
                    orderObject[field.name] = field.value;
                })
               
                orderObject.Items = JSON.parse(orderObject.Items);

                console.log(JSON.stringify(orderObject));

                $.ajax({
                    url:"/Order/AddOrder",
                    type: "post",
                    contentType: 'application/json',
                    data: JSON.stringify(orderObject),
                    success: function (response) {
                        if (response.statusCode == 200 || response.statusCode == 201) {
                            location.href = "/Order";
                        }
                        else {
                            toastAlert(response.message, "error", 10000)
                        }
                        console.log(response);
                    },
                    error: function (jqXHR, exception)  {
                        if (jqXHR.status === 0) {
                            toastAlert('Not connect.\n Verify Network.', "error", 10000);
                        } else if (jqXHR.status == 404) {
                            toastAlert('Requested page not found. [404]', "error", 10000);
                        } else if (jqXHR.status == 500) {
                            toastAlert('Internal Server Error [500].', "error", 10000);
                        } else if (exception === 'parsererror') {
                            toastAlert('Requested JSON parse failed.', "error", 10000);
                        } else if (exception === 'timeout') {
                            toastAlert('Time out error.', "error", 10000);
                        } else if (exception === 'abort') {
                            toastAlert('Ajax request aborted.', "error", 10000);
                        } else {
                            toastAlert('Uncaught Error.\n' + jqXHR.responseText, "error", 10000);
                        }
                    }
                })
            }
        });

        $("#btnCancelOrder").click(function() {
            location.href = "/Order";
        })
    })
</script>
